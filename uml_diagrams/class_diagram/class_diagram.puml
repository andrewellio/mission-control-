@startuml MissionControl
class MissionControl {
  model: Model
  views: List<View>
  controller: Controller
}
View "1..*" <-- "1" MissionControl
Model "1" <-- "1" MissionControl
Controller "1" <-- "1" MissionControl

class View {
  goNoGo: GoNoGoView
  map: MapView
  phase: PhaseView
  readings: ReadingsView
}
MapService "1" <-- "1" View : has

class Model {
  rocketLocation: Location
  rocketVector: Vector
  rocketAltitude: float
  rocketVelocity: float
  rocketState: RocketState
  simulationResults: List<Simulation>

  void updateRocket()
  void runSimulations()
}
Simulator <-- Model : has
WeatherService <-- Model : has
Avonics <-- Model : has

class Controller {

  void sendNoGo()
  void sendGo()
  void sendLaunchImminent()
  Vector getLaunchAngle()
  void suggestLaunchAngle(Vector)
  void runSimulations()
}



enum RocketState {
  LIFT_OFF
  POWERED_ASCENT
  COAST
  APOGEE
  EJECTION
  RECOVERY
}

class Location {
  latitude: float
  longitude: float
}

class Vector {
  x: float
  y: float
  z: float
}

interface Avonics {
  void suggestLaunchAngle(Vector)
  void update()
}

interface Simulator {
  Simulation runSimulation(Vector, Location, Weather)
  List<Simulation> getResults()
}


interface WeatherService {
  Weather getWeather()
  void setLocation(Location)
}


interface MapService

@enduml
